TOKEN_INT, int
TOKEN_IDENTIFIER, a
TOKEN_SEMICOLON, ;
TOKEN_INT, int
TOKEN_IDENTIFIER, b
TOKEN_SEMICOLON, ;
TOKEN_INT, int
TOKEN_IDENTIFIER, c
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, a
TOKEN_ASSIGN, =
TOKEN_NUMBER, 10
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, b
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, c
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_PLUS, +
TOKEN_IDENTIFIER, b
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, a
TOKEN_ASSIGN, =
TOKEN_NUMBER, 5
TOKEN_MULTIPLY, *
TOKEN_IDENTIFIER, c
TOKEN_SEMICOLON, ;
TOKEN_OUT, out
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, a
TOKEN_RPAREN, )
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, b
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_DIVIDE, /
TOKEN_NUMBER, 5
TOKEN_SEMICOLON, ;
TOKEN_OUT, out
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, b
TOKEN_RPAREN, )
TOKEN_SEMICOLON, ;
TOKEN_IF, if
TOKEN_LPAREN, (
TOKEN_NUMBER, 10
TOKEN_EQUAL, ==
TOKEN_NUMBER, 11
TOKEN_RPAREN, )
TOKEN_LBRACE, {
TOKEN_INT, int
TOKEN_IDENTIFIER, d
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, d
TOKEN_ASSIGN, =
TOKEN_NUMBER, 5
TOKEN_SEMICOLON, ;
TOKEN_OUT, out
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, d
TOKEN_RPAREN, )
TOKEN_SEMICOLON, ;
TOKEN_IF, if
TOKEN_LPAREN, (
TOKEN_NUMBER, 20
TOKEN_EQUAL, ==
TOKEN_IDENTIFIER, c
TOKEN_RPAREN, )
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, a
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_PLUS, +
TOKEN_IDENTIFIER, b
TOKEN_SEMICOLON, ;
TOKEN_IF, if
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, b
TOKEN_LESS, <
TOKEN_NUMBER, 10
TOKEN_RPAREN, )
TOKEN_LBRACE, {
TOKEN_INT, int
TOKEN_IDENTIFIER, x
TOKEN_SEMICOLON, ;
TOKEN_IDENTIFIER, x
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_SEMICOLON, ;
TOKEN_RBRACE, }
TOKEN_ELSE, else
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, a
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, b
TOKEN_SEMICOLON, ;
TOKEN_RBRACE, }
TOKEN_RBRACE, }
TOKEN_ELSE, else
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, b
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_SEMICOLON, ;
TOKEN_RBRACE, }
TOKEN_RBRACE, }
TOKEN_ELSE, else
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, b
TOKEN_ASSIGN, =
TOKEN_NUMBER, 5
TOKEN_MINUS, -
TOKEN_NUMBER, 5
TOKEN_SEMICOLON, ;
TOKEN_OUT, out
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, b
TOKEN_RPAREN, )
TOKEN_SEMICOLON, ;
TOKEN_IF, if
TOKEN_LPAREN, (
TOKEN_IDENTIFIER, b
TOKEN_LESS, <
TOKEN_NUMBER, 10
TOKEN_RPAREN, )
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, a
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, x
TOKEN_SEMICOLON, ;
TOKEN_RBRACE, }
TOKEN_ELSE, else
TOKEN_LBRACE, {
TOKEN_IDENTIFIER, b
TOKEN_ASSIGN, =
TOKEN_IDENTIFIER, a
TOKEN_SEMICOLON, ;
TOKEN_RBRACE, }
TOKEN_RBRACE, }
